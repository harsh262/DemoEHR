/**
 * Angular Homepage Controller
 */
var homePageApp = angular.module('homePageApp',['ngCookies']).run(['$rootScope','VitalReviewService','$cookies', function ($rootScope,VitalReviewService,$cookies) {
	$rootScope.patientInfoMethod = VitalReviewService.getPatientByFilter('mrn',$cookies.get('patientMrn')).then(function(data) {
		console.log(data);
		$rootScope.patientInfo = data;
		console.log($rootScope.patientInfo);
	});
	$rootScope.test = "Pravin Sawul";
	
	
	/*$rootScope.globalFoo = function() {
        alert("I'm global foo!");
    };*/
}]);

homePageApp.controller("HomePageController",['$scope','$rootScope','VitalReviewService','$window','CommonDateUtils','$cookies', function($scope,$rootScope,VitalReviewService,$window,CommonDateUtils,$cookies) {
	$scope.leftHeaderList = [];
	$scope.vitalList = [];
	
	 $scope.decodeFunction = function(patient){
		 return decodeURIComponent(patient);
	 }
	 console.log($rootScope.patientInfo);
	 //$scope.patientInfo = $rootScope.patientInfo;// = VitalReviewService.getPatientByFilter('mrn',$cookies.get('patientMrn'));//JSON.parse(getCookie("patientInfo"));
	 
		$scope.getVitalList = function(){
			console.log($rootScope.patientInfo);
			VitalReviewService.getVitalReview($rootScope.patientInfo).then(function(data) {
				$scope.vitalReviewList = data;
				generateVitalReviewTable();
			})
		}
		
	
	/* 
	 * Add Row in vital table 
	 */
	$scope.AddData = function(){
		$scope.qualifiers = [];
		var vital ={
				vitalName: $scope.vitalName,
				value: $scope.value,
				unit: $scope.unit,
				range: $scope.range,
				key : $scope.key,
				min : $scope.min, 
				max : $scope.max,
				qualifiers : $scope.qualifiers
		}		
		$scope.vitalList.push(vital);
		clearVitals();
		console.log($scope.vitalList);
	};
	
	/*
	 * Remove Row in vital table
	 */
	$scope.removeData = function(index) {
		if( $window.confirm('Are you absolutely sure you want to delete?')){
			$scope.vitalList.splice(index, 1);
		}
		
	};
	/*
	 * function to set text boxes.
	 */
	$scope.setVital = function(vitalName, min, max, unit, range, key) {
		$scope.vitalName = vitalName;
		$scope.min = min;
		$scope.max = max;
		$scope.unit = unit;
		$scope.range = range;
		$scope.key = key;
	}
	 var clearVitals = function () {
			$scope.min = '';
			$scope.max ='';
			$scope.unit = '';
			$scope.value = '';
		}
	 
	 //save vitals
	 $scope.saveVitlas = function(){
		 var currDt = new Date();
		 var datetext = currDt.toTimeString();
			var vitalObj = {
					"date": currDt.getTime(),
					"timeStamp":CommonDateUtils.getTime(),
					"visitId":$rootScope.patientInfo.visitRecords[0]._id,
					"vitals":$scope.vitalList
			}
			console.log(JSON.stringify(vitalObj, $rootScope.patientInfo._id)+"***");
		VitalReviewService.saveVitals(vitalObj, $rootScope.patientInfo._id);
	 }
	 
	 $scope.decodeFunction = function(patient){
		 return decodeURIComponent(patient);
	 }
	 
	 function getParamValuesFromUrl(){
			  // This function is anonymous, is executed immediately and 
			  // the return value is assigned to QueryString!
			  var query_string = {};
			  var query = window.location.search.substring(1);
			  console.log(query);
			  var vars = query.split("&");
			  for (var i=0;i<vars.length;i++) {
			    var pair = vars[i].split("=");
			        // If first entry with this name
			    if (typeof query_string[pair[0]] === "undefined") {
			      query_string[pair[0]] = decodeURIComponent(pair[1]);
			        // If second entry with this name
			    } else if (typeof query_string[pair[0]] === "string") {
			      var arr = [ query_string[pair[0]],decodeURIComponent(pair[1]) ];
			      query_string[pair[0]] = arr;
			        // If third or later entry with this name
			    } else {
			      query_string[pair[0]].push(decodeURIComponent(pair[1]));
			    }
			  } 
			  console.log(query_string);
			  //alert(location.href.replace(query, ""));
			  //location.href=location.href.replace(query, "");
			  //$rootScope.patientInfo = 
			 //return JSON.parse($scope.decodeFunction(query_string.pData));
			  return JSON.parse(query_string.pData);
			 // console.log($rootScope.patientInfo);
			 // return query_string.pData;
	 }
	 
	 
	 function generateVitalReviewTable(){
		 var tb = angular.element( document.querySelector( '#myTable' ) );
		 tb.empty();
		 var max = 0;
			var index = 0;
			var vital ={
					vitalName: $scope.vitalName,
					value: $scope.value,
					unit: $scope.unit,
					range: $scope.range,
			}
			
			
			angular.forEach($scope.vitalReviewList, function(value, key) {
				 angular.forEach(value.vitals, function(value, key) {
						console.log(value.key);
						
						if ($scope.leftHeaderList.indexOf(value.key) == -1) {
							$scope.leftHeaderList.push(value.key);
						}
					});
					
				});
			
			
			 console.log(index + ': ' + $scope.leftHeaderList);
			 var tableStr = "";
			 var i = 0;
			 	tableStr += "<tr class=\"border-bottom\"><td style = \"background-color: #f5fffd; color: #39ab94; padding-right:15px;padding-top: 5px;padding-bottom: 5px;\">&nbsp;<br><br></td>";
			 	angular.forEach($scope.leftHeaderList, function(topHeading, key) {
			 		tableStr += "<td style=\"padding:4px;\">"+topHeading+"</td>";
			 		
				});
			 	tableStr += "</tr>";
			 	
			 
			 //--------
			 	angular.forEach($scope.vitalReviewList, function(value, key) {
			 		if(key <= 9){
			 		var jsondate = "/Date("+value.date+")/";
			 		var jsDate = new Date(parseInt(jsondate.substr(6)));
				 tableStr   += "<tr class=\"border-bottom\">"
				 	    	+"<th style = \"background-color: #f5fffd; color: #39ab94; padding-right:15px;padding-top: 5px;padding-bottom: 5px;\"> <div>"+jsDate.getDate()+"-"+parseInt(jsDate.getMonth()+1)+"-"+jsDate.getFullYear()+"</div><div>"+value.timeStamp+"</div></th>" 
				 	    		angular.forEach($scope.leftHeaderList, function(header, key) {
				 	    			angular.forEach(value.vitals, function(value1, key) {
				 				 if(header == value1.key){
				 					 tableStr += "<td style=\"padding:4px;\">"+ value1.value +" "+value1.unit+"</td>";
				 					 i = 1;
				 					 return;
				 				 }
				 			 });
				 	    	if(i==0)
				 	    		 tableStr += "<td>-</td>";
				 	    	else
				 	    		i=0;
							});
				
				 tableStr += "</tr>";
			 		}
				});
			 
			 	var myEl = angular.element( document.querySelector( '#myTable' ) );
			 	myEl.append(tableStr);
	 }
}])